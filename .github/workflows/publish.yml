name: Publish packages

on: push

env:
    # Base options
    PACKAGE_NAME: ${{ github.event.repository.name }}
    REPOSITORY_NAME: ${{ github.event.repository.name }}

    # Github options
    GHCR_REGISTRY_OWNER: ${{ github.repository_owner }}
    GHCR_REGISTRY_HOST: ghcr.io
    GHCR_REGISTRY_USERNAME: ${{ secrets.PACKAGES_USER }}
    GHCR_REGISTRY_PASSWORD: ${{ secrets.PACKAGES_TOKEN }}

    GITHUB_DEPLOY_EVENT: deploy
    GITHUB_DEPLOY_REPOSITORY: ${{ github.repository_owner }}/${{ github.event.repository.name }}-deploy

jobs:
    create-latest-image:
        name: Create latest docker image
        runs-on: ubuntu-latest
        if: contains( github.ref, 'refs/tags/') == false && ( github.ref == 'refs/heads/master')
        steps:
            -
                name: Cancel Previous Runs
                uses: styfle/cancel-workflow-action@0.4.1
                with:
                    access_token: ${{ github.token }}
            -
                name: Checkout
                uses: actions/checkout@v2
            -
                name: Set image tags
                run: |
                    echo "GHCR_TAG=${{ env.GHCR_REGISTRY_HOST }}/${GHCR_REGISTRY_OWNER,,}/${PACKAGE_NAME,,}:latest" >> $GITHUB_ENV
            -
                name: Set up QEMU
                uses: docker/setup-qemu-action@v1
            -
                name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v1
            -
                name: Login to GithHub
                uses: docker/login-action@v1
                with:
                    registry: ${{ env.GHCR_REGISTRY_HOST }}
                    username: ${{ env.GHCR_REGISTRY_USERNAME }}
                    password: ${{ env.GHCR_REGISTRY_PASSWORD }}
            -
                name: Build and push
                uses: docker/build-push-action@v2
                with:
                    context: .
                    platforms: linux/amd64
                    push: true
                    tags: |
                        ${{ env.GHCR_TAG }}

    deploy-latest:
        name: Dispatch deploy latest image
        runs-on: ubuntu-latest
        needs: create-latest-image
        steps:
            -
                name: Cancel Previous Runs
                uses: styfle/cancel-workflow-action@0.4.1
                with:
                    access_token: ${{ github.token }}
            -
                name: Set env
                run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
            -
                name: Dispatch Builds
                uses: peter-evans/repository-dispatch@v1.0.0
                with:
                    token: ${{ env.GHCR_REGISTRY_PASSWORD }}
                    repository: ${{ env.GITHUB_DEPLOY_REPOSITORY }}
                    event-type: ${{ env.GITHUB_DEPLOY_EVENT }}
                    client-payload: '{"package": "${{ env.PACKAGE_NAME }}", "label": "latest", "ref": "${{ github.ref }}"}'

    skip:
        name: Skip build image and deploy
        runs-on: ubuntu-latest
        if: contains( github.ref, 'refs/tags/') == false && github.ref != 'refs/heads/master' && github.ref != 'refs/heads/develop'
        steps:
            - name: Cancel Previous Runs
              uses: styfle/cancel-workflow-action@0.4.1
              with:
                  access_token: ${{ github.token }}
